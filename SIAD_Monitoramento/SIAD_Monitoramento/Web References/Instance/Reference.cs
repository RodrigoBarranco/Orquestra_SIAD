//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SIAD_Monitoramento.Instance {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="InstanceSoap", Namespace="http://www.cryo.com.br/")]
    public partial class Instance : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateInstance01OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateInstance02OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateInstanceSubprocess01OperationCompleted;
        
        private System.Threading.SendOrPostCallback Cancel01OperationCompleted;
        
        private System.Threading.SendOrPostCallback Cancel02OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXml01OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForm01OperationCompleted;
        
        private System.Threading.SendOrPostCallback FinalizeTask01OperationCompleted;
        
        private System.Threading.SendOrPostCallback FinalizeTask02OperationCompleted;
        
        private System.Threading.SendOrPostCallback FinalizeTask03OperationCompleted;
        
        private System.Threading.SendOrPostCallback FinalizeTask04OperationCompleted;
        
        private System.Threading.SendOrPostCallback AttachFile01OperationCompleted;
        
        private System.Threading.SendOrPostCallback AttachFile02OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMessage01OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Instance() {
            this.Url = global::SIAD_Monitoramento.Properties.Settings.Default.SIAD_Monitoramento_Instance_Instance;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateInstance01CompletedEventHandler CreateInstance01Completed;
        
        /// <remarks/>
        public event CreateInstance02CompletedEventHandler CreateInstance02Completed;
        
        /// <remarks/>
        public event CreateInstanceSubprocess01CompletedEventHandler CreateInstanceSubprocess01Completed;
        
        /// <remarks/>
        public event Cancel01CompletedEventHandler Cancel01Completed;
        
        /// <remarks/>
        public event Cancel02CompletedEventHandler Cancel02Completed;
        
        /// <remarks/>
        public event GetXml01CompletedEventHandler GetXml01Completed;
        
        /// <remarks/>
        public event UpdateForm01CompletedEventHandler UpdateForm01Completed;
        
        /// <remarks/>
        public event FinalizeTask01CompletedEventHandler FinalizeTask01Completed;
        
        /// <remarks/>
        public event FinalizeTask02CompletedEventHandler FinalizeTask02Completed;
        
        /// <remarks/>
        public event FinalizeTask03CompletedEventHandler FinalizeTask03Completed;
        
        /// <remarks/>
        public event FinalizeTask04CompletedEventHandler FinalizeTask04Completed;
        
        /// <remarks/>
        public event AttachFile01CompletedEventHandler AttachFile01Completed;
        
        /// <remarks/>
        public event AttachFile02CompletedEventHandler AttachFile02Completed;
        
        /// <remarks/>
        public event AddMessage01CompletedEventHandler AddMessage01Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cryo.com.br/CreateInstance01", RequestNamespace="http://www.cryo.com.br/", ResponseNamespace="http://www.cryo.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateInstance01(string Token, int CodFlow, bool Simulation, string XmlValues) {
            object[] results = this.Invoke("CreateInstance01", new object[] {
                        Token,
                        CodFlow,
                        Simulation,
                        XmlValues});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateInstance01Async(string Token, int CodFlow, bool Simulation, string XmlValues) {
            this.CreateInstance01Async(Token, CodFlow, Simulation, XmlValues, null);
        }
        
        /// <remarks/>
        public void CreateInstance01Async(string Token, int CodFlow, bool Simulation, string XmlValues, object userState) {
            if ((this.CreateInstance01OperationCompleted == null)) {
                this.CreateInstance01OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateInstance01OperationCompleted);
            }
            this.InvokeAsync("CreateInstance01", new object[] {
                        Token,
                        CodFlow,
                        Simulation,
                        XmlValues}, this.CreateInstance01OperationCompleted, userState);
        }
        
        private void OnCreateInstance01OperationCompleted(object arg) {
            if ((this.CreateInstance01Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateInstance01Completed(this, new CreateInstance01CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cryo.com.br/CreateInstance02", RequestNamespace="http://www.cryo.com.br/", ResponseNamespace="http://www.cryo.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateInstance02(string Token, int CodArea, int CodPosition, int CodFlow, bool Simulation, string XmlValues) {
            object[] results = this.Invoke("CreateInstance02", new object[] {
                        Token,
                        CodArea,
                        CodPosition,
                        CodFlow,
                        Simulation,
                        XmlValues});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateInstance02Async(string Token, int CodArea, int CodPosition, int CodFlow, bool Simulation, string XmlValues) {
            this.CreateInstance02Async(Token, CodArea, CodPosition, CodFlow, Simulation, XmlValues, null);
        }
        
        /// <remarks/>
        public void CreateInstance02Async(string Token, int CodArea, int CodPosition, int CodFlow, bool Simulation, string XmlValues, object userState) {
            if ((this.CreateInstance02OperationCompleted == null)) {
                this.CreateInstance02OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateInstance02OperationCompleted);
            }
            this.InvokeAsync("CreateInstance02", new object[] {
                        Token,
                        CodArea,
                        CodPosition,
                        CodFlow,
                        Simulation,
                        XmlValues}, this.CreateInstance02OperationCompleted, userState);
        }
        
        private void OnCreateInstance02OperationCompleted(object arg) {
            if ((this.CreateInstance02Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateInstance02Completed(this, new CreateInstance02CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cryo.com.br/CreateInstanceSubprocess01", RequestNamespace="http://www.cryo.com.br/", ResponseNamespace="http://www.cryo.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateInstanceSubprocess01(string Token, int CodFlowSubprocess, bool Simulation, string XmlValues, int CodFlowParent, int CodFlowExecuteParent, string DsFlowElementAlias) {
            object[] results = this.Invoke("CreateInstanceSubprocess01", new object[] {
                        Token,
                        CodFlowSubprocess,
                        Simulation,
                        XmlValues,
                        CodFlowParent,
                        CodFlowExecuteParent,
                        DsFlowElementAlias});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateInstanceSubprocess01Async(string Token, int CodFlowSubprocess, bool Simulation, string XmlValues, int CodFlowParent, int CodFlowExecuteParent, string DsFlowElementAlias) {
            this.CreateInstanceSubprocess01Async(Token, CodFlowSubprocess, Simulation, XmlValues, CodFlowParent, CodFlowExecuteParent, DsFlowElementAlias, null);
        }
        
        /// <remarks/>
        public void CreateInstanceSubprocess01Async(string Token, int CodFlowSubprocess, bool Simulation, string XmlValues, int CodFlowParent, int CodFlowExecuteParent, string DsFlowElementAlias, object userState) {
            if ((this.CreateInstanceSubprocess01OperationCompleted == null)) {
                this.CreateInstanceSubprocess01OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateInstanceSubprocess01OperationCompleted);
            }
            this.InvokeAsync("CreateInstanceSubprocess01", new object[] {
                        Token,
                        CodFlowSubprocess,
                        Simulation,
                        XmlValues,
                        CodFlowParent,
                        CodFlowExecuteParent,
                        DsFlowElementAlias}, this.CreateInstanceSubprocess01OperationCompleted, userState);
        }
        
        private void OnCreateInstanceSubprocess01OperationCompleted(object arg) {
            if ((this.CreateInstanceSubprocess01Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateInstanceSubprocess01Completed(this, new CreateInstanceSubprocess01CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cryo.com.br/Cancel01", RequestNamespace="http://www.cryo.com.br/", ResponseNamespace="http://www.cryo.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Cancel01(string Token, int CodFlowExecute) {
            object[] results = this.Invoke("Cancel01", new object[] {
                        Token,
                        CodFlowExecute});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void Cancel01Async(string Token, int CodFlowExecute) {
            this.Cancel01Async(Token, CodFlowExecute, null);
        }
        
        /// <remarks/>
        public void Cancel01Async(string Token, int CodFlowExecute, object userState) {
            if ((this.Cancel01OperationCompleted == null)) {
                this.Cancel01OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancel01OperationCompleted);
            }
            this.InvokeAsync("Cancel01", new object[] {
                        Token,
                        CodFlowExecute}, this.Cancel01OperationCompleted, userState);
        }
        
        private void OnCancel01OperationCompleted(object arg) {
            if ((this.Cancel01Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Cancel01Completed(this, new Cancel01CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cryo.com.br/Cancel02", RequestNamespace="http://www.cryo.com.br/", ResponseNamespace="http://www.cryo.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Cancel02(string Token, int CodFlowExecute, string DsObs) {
            object[] results = this.Invoke("Cancel02", new object[] {
                        Token,
                        CodFlowExecute,
                        DsObs});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void Cancel02Async(string Token, int CodFlowExecute, string DsObs) {
            this.Cancel02Async(Token, CodFlowExecute, DsObs, null);
        }
        
        /// <remarks/>
        public void Cancel02Async(string Token, int CodFlowExecute, string DsObs, object userState) {
            if ((this.Cancel02OperationCompleted == null)) {
                this.Cancel02OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancel02OperationCompleted);
            }
            this.InvokeAsync("Cancel02", new object[] {
                        Token,
                        CodFlowExecute,
                        DsObs}, this.Cancel02OperationCompleted, userState);
        }
        
        private void OnCancel02OperationCompleted(object arg) {
            if ((this.Cancel02Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Cancel02Completed(this, new Cancel02CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cryo.com.br/GetXml01", RequestNamespace="http://www.cryo.com.br/", ResponseNamespace="http://www.cryo.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetXml01(string Token, int CodFlowExecute) {
            object[] results = this.Invoke("GetXml01", new object[] {
                        Token,
                        CodFlowExecute});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetXml01Async(string Token, int CodFlowExecute) {
            this.GetXml01Async(Token, CodFlowExecute, null);
        }
        
        /// <remarks/>
        public void GetXml01Async(string Token, int CodFlowExecute, object userState) {
            if ((this.GetXml01OperationCompleted == null)) {
                this.GetXml01OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXml01OperationCompleted);
            }
            this.InvokeAsync("GetXml01", new object[] {
                        Token,
                        CodFlowExecute}, this.GetXml01OperationCompleted, userState);
        }
        
        private void OnGetXml01OperationCompleted(object arg) {
            if ((this.GetXml01Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXml01Completed(this, new GetXml01CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cryo.com.br/UpdateForm01", RequestNamespace="http://www.cryo.com.br/", ResponseNamespace="http://www.cryo.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateForm01(string Token, int CodFlowExecute, string XmlValues) {
            object[] results = this.Invoke("UpdateForm01", new object[] {
                        Token,
                        CodFlowExecute,
                        XmlValues});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForm01Async(string Token, int CodFlowExecute, string XmlValues) {
            this.UpdateForm01Async(Token, CodFlowExecute, XmlValues, null);
        }
        
        /// <remarks/>
        public void UpdateForm01Async(string Token, int CodFlowExecute, string XmlValues, object userState) {
            if ((this.UpdateForm01OperationCompleted == null)) {
                this.UpdateForm01OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForm01OperationCompleted);
            }
            this.InvokeAsync("UpdateForm01", new object[] {
                        Token,
                        CodFlowExecute,
                        XmlValues}, this.UpdateForm01OperationCompleted, userState);
        }
        
        private void OnUpdateForm01OperationCompleted(object arg) {
            if ((this.UpdateForm01Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForm01Completed(this, new UpdateForm01CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cryo.com.br/FinalizeTask01", RequestNamespace="http://www.cryo.com.br/", ResponseNamespace="http://www.cryo.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode FinalizeTask01(string Token, int CodFlowExecuteTask, int CodFlowResult, string XmlValues) {
            object[] results = this.Invoke("FinalizeTask01", new object[] {
                        Token,
                        CodFlowExecuteTask,
                        CodFlowResult,
                        XmlValues});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void FinalizeTask01Async(string Token, int CodFlowExecuteTask, int CodFlowResult, string XmlValues) {
            this.FinalizeTask01Async(Token, CodFlowExecuteTask, CodFlowResult, XmlValues, null);
        }
        
        /// <remarks/>
        public void FinalizeTask01Async(string Token, int CodFlowExecuteTask, int CodFlowResult, string XmlValues, object userState) {
            if ((this.FinalizeTask01OperationCompleted == null)) {
                this.FinalizeTask01OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinalizeTask01OperationCompleted);
            }
            this.InvokeAsync("FinalizeTask01", new object[] {
                        Token,
                        CodFlowExecuteTask,
                        CodFlowResult,
                        XmlValues}, this.FinalizeTask01OperationCompleted, userState);
        }
        
        private void OnFinalizeTask01OperationCompleted(object arg) {
            if ((this.FinalizeTask01Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinalizeTask01Completed(this, new FinalizeTask01CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cryo.com.br/FinalizeTask02", RequestNamespace="http://www.cryo.com.br/", ResponseNamespace="http://www.cryo.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode FinalizeTask02(string Token, int CodFlowExecuteTask, string DsFlowResult, string XmlValues) {
            object[] results = this.Invoke("FinalizeTask02", new object[] {
                        Token,
                        CodFlowExecuteTask,
                        DsFlowResult,
                        XmlValues});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void FinalizeTask02Async(string Token, int CodFlowExecuteTask, string DsFlowResult, string XmlValues) {
            this.FinalizeTask02Async(Token, CodFlowExecuteTask, DsFlowResult, XmlValues, null);
        }
        
        /// <remarks/>
        public void FinalizeTask02Async(string Token, int CodFlowExecuteTask, string DsFlowResult, string XmlValues, object userState) {
            if ((this.FinalizeTask02OperationCompleted == null)) {
                this.FinalizeTask02OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinalizeTask02OperationCompleted);
            }
            this.InvokeAsync("FinalizeTask02", new object[] {
                        Token,
                        CodFlowExecuteTask,
                        DsFlowResult,
                        XmlValues}, this.FinalizeTask02OperationCompleted, userState);
        }
        
        private void OnFinalizeTask02OperationCompleted(object arg) {
            if ((this.FinalizeTask02Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinalizeTask02Completed(this, new FinalizeTask02CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cryo.com.br/FinalizeTask03", RequestNamespace="http://www.cryo.com.br/", ResponseNamespace="http://www.cryo.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode FinalizeTask03(string Token, int CodFlowExecute, string DsFlowElementAlias, int CodFlowResult, string XmlValues) {
            object[] results = this.Invoke("FinalizeTask03", new object[] {
                        Token,
                        CodFlowExecute,
                        DsFlowElementAlias,
                        CodFlowResult,
                        XmlValues});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void FinalizeTask03Async(string Token, int CodFlowExecute, string DsFlowElementAlias, int CodFlowResult, string XmlValues) {
            this.FinalizeTask03Async(Token, CodFlowExecute, DsFlowElementAlias, CodFlowResult, XmlValues, null);
        }
        
        /// <remarks/>
        public void FinalizeTask03Async(string Token, int CodFlowExecute, string DsFlowElementAlias, int CodFlowResult, string XmlValues, object userState) {
            if ((this.FinalizeTask03OperationCompleted == null)) {
                this.FinalizeTask03OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinalizeTask03OperationCompleted);
            }
            this.InvokeAsync("FinalizeTask03", new object[] {
                        Token,
                        CodFlowExecute,
                        DsFlowElementAlias,
                        CodFlowResult,
                        XmlValues}, this.FinalizeTask03OperationCompleted, userState);
        }
        
        private void OnFinalizeTask03OperationCompleted(object arg) {
            if ((this.FinalizeTask03Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinalizeTask03Completed(this, new FinalizeTask03CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cryo.com.br/FinalizeTask04", RequestNamespace="http://www.cryo.com.br/", ResponseNamespace="http://www.cryo.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode FinalizeTask04(string Token, int CodFlowExecute, string DsFlowElementAlias, string DsFlowResult, string XmlValues) {
            object[] results = this.Invoke("FinalizeTask04", new object[] {
                        Token,
                        CodFlowExecute,
                        DsFlowElementAlias,
                        DsFlowResult,
                        XmlValues});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void FinalizeTask04Async(string Token, int CodFlowExecute, string DsFlowElementAlias, string DsFlowResult, string XmlValues) {
            this.FinalizeTask04Async(Token, CodFlowExecute, DsFlowElementAlias, DsFlowResult, XmlValues, null);
        }
        
        /// <remarks/>
        public void FinalizeTask04Async(string Token, int CodFlowExecute, string DsFlowElementAlias, string DsFlowResult, string XmlValues, object userState) {
            if ((this.FinalizeTask04OperationCompleted == null)) {
                this.FinalizeTask04OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinalizeTask04OperationCompleted);
            }
            this.InvokeAsync("FinalizeTask04", new object[] {
                        Token,
                        CodFlowExecute,
                        DsFlowElementAlias,
                        DsFlowResult,
                        XmlValues}, this.FinalizeTask04OperationCompleted, userState);
        }
        
        private void OnFinalizeTask04OperationCompleted(object arg) {
            if ((this.FinalizeTask04Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinalizeTask04Completed(this, new FinalizeTask04CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cryo.com.br/AttachFile01", RequestNamespace="http://www.cryo.com.br/", ResponseNamespace="http://www.cryo.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AttachFile01(string Token, int CodFlowExecuteTask, string DsFileName, string DsFilePath, string DsResume, bool RequesterCanSee) {
            object[] results = this.Invoke("AttachFile01", new object[] {
                        Token,
                        CodFlowExecuteTask,
                        DsFileName,
                        DsFilePath,
                        DsResume,
                        RequesterCanSee});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AttachFile01Async(string Token, int CodFlowExecuteTask, string DsFileName, string DsFilePath, string DsResume, bool RequesterCanSee) {
            this.AttachFile01Async(Token, CodFlowExecuteTask, DsFileName, DsFilePath, DsResume, RequesterCanSee, null);
        }
        
        /// <remarks/>
        public void AttachFile01Async(string Token, int CodFlowExecuteTask, string DsFileName, string DsFilePath, string DsResume, bool RequesterCanSee, object userState) {
            if ((this.AttachFile01OperationCompleted == null)) {
                this.AttachFile01OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAttachFile01OperationCompleted);
            }
            this.InvokeAsync("AttachFile01", new object[] {
                        Token,
                        CodFlowExecuteTask,
                        DsFileName,
                        DsFilePath,
                        DsResume,
                        RequesterCanSee}, this.AttachFile01OperationCompleted, userState);
        }
        
        private void OnAttachFile01OperationCompleted(object arg) {
            if ((this.AttachFile01Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AttachFile01Completed(this, new AttachFile01CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cryo.com.br/AttachFile02", RequestNamespace="http://www.cryo.com.br/", ResponseNamespace="http://www.cryo.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AttachFile02(string Token, int CodFlowExecute, string DsFlowElementAlias, string DsFileName, string DsFilePath, string DsResume, bool RequesterCanSee) {
            object[] results = this.Invoke("AttachFile02", new object[] {
                        Token,
                        CodFlowExecute,
                        DsFlowElementAlias,
                        DsFileName,
                        DsFilePath,
                        DsResume,
                        RequesterCanSee});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AttachFile02Async(string Token, int CodFlowExecute, string DsFlowElementAlias, string DsFileName, string DsFilePath, string DsResume, bool RequesterCanSee) {
            this.AttachFile02Async(Token, CodFlowExecute, DsFlowElementAlias, DsFileName, DsFilePath, DsResume, RequesterCanSee, null);
        }
        
        /// <remarks/>
        public void AttachFile02Async(string Token, int CodFlowExecute, string DsFlowElementAlias, string DsFileName, string DsFilePath, string DsResume, bool RequesterCanSee, object userState) {
            if ((this.AttachFile02OperationCompleted == null)) {
                this.AttachFile02OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAttachFile02OperationCompleted);
            }
            this.InvokeAsync("AttachFile02", new object[] {
                        Token,
                        CodFlowExecute,
                        DsFlowElementAlias,
                        DsFileName,
                        DsFilePath,
                        DsResume,
                        RequesterCanSee}, this.AttachFile02OperationCompleted, userState);
        }
        
        private void OnAttachFile02OperationCompleted(object arg) {
            if ((this.AttachFile02Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AttachFile02Completed(this, new AttachFile02CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cryo.com.br/AddMessage01", RequestNamespace="http://www.cryo.com.br/", ResponseNamespace="http://www.cryo.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddMessage01(string Token, int CodFlowExecuteTask, string DsMessage, bool RequesterCanSee) {
            object[] results = this.Invoke("AddMessage01", new object[] {
                        Token,
                        CodFlowExecuteTask,
                        DsMessage,
                        RequesterCanSee});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddMessage01Async(string Token, int CodFlowExecuteTask, string DsMessage, bool RequesterCanSee) {
            this.AddMessage01Async(Token, CodFlowExecuteTask, DsMessage, RequesterCanSee, null);
        }
        
        /// <remarks/>
        public void AddMessage01Async(string Token, int CodFlowExecuteTask, string DsMessage, bool RequesterCanSee, object userState) {
            if ((this.AddMessage01OperationCompleted == null)) {
                this.AddMessage01OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMessage01OperationCompleted);
            }
            this.InvokeAsync("AddMessage01", new object[] {
                        Token,
                        CodFlowExecuteTask,
                        DsMessage,
                        RequesterCanSee}, this.AddMessage01OperationCompleted, userState);
        }
        
        private void OnAddMessage01OperationCompleted(object arg) {
            if ((this.AddMessage01Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMessage01Completed(this, new AddMessage01CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CreateInstance01CompletedEventHandler(object sender, CreateInstance01CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateInstance01CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateInstance01CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CreateInstance02CompletedEventHandler(object sender, CreateInstance02CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateInstance02CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateInstance02CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CreateInstanceSubprocess01CompletedEventHandler(object sender, CreateInstanceSubprocess01CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateInstanceSubprocess01CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateInstanceSubprocess01CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void Cancel01CompletedEventHandler(object sender, Cancel01CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Cancel01CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Cancel01CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void Cancel02CompletedEventHandler(object sender, Cancel02CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Cancel02CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Cancel02CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetXml01CompletedEventHandler(object sender, GetXml01CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXml01CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXml01CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateForm01CompletedEventHandler(object sender, UpdateForm01CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForm01CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForm01CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void FinalizeTask01CompletedEventHandler(object sender, FinalizeTask01CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinalizeTask01CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinalizeTask01CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void FinalizeTask02CompletedEventHandler(object sender, FinalizeTask02CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinalizeTask02CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinalizeTask02CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void FinalizeTask03CompletedEventHandler(object sender, FinalizeTask03CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinalizeTask03CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinalizeTask03CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void FinalizeTask04CompletedEventHandler(object sender, FinalizeTask04CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinalizeTask04CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinalizeTask04CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AttachFile01CompletedEventHandler(object sender, AttachFile01CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AttachFile01CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AttachFile01CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AttachFile02CompletedEventHandler(object sender, AttachFile02CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AttachFile02CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AttachFile02CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddMessage01CompletedEventHandler(object sender, AddMessage01CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMessage01CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMessage01CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591